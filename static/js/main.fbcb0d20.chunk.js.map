{"version":3,"sources":["lib/index.ts","app/types.ts","app/index.ts","components/Form/Form.module.css","components/Message/Message.module.css","components/App/App.module.css","components/Messages/Messages.module.css","components/Sentiment/Sentiment.module.css","components/Messages/Messages.tsx","components/Fireworks/Fireworks.module.css","components/Message/Message.tsx","components/Fireworks/Fireworks.tsx","components/Form/Form.tsx","components/Sentiment/Sentiment.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["devicePixelRatio","dpr","requestAnimationFrame","raf","cancelAnimationFrame","caf","window","atan2","cos","PI","π","random","sin","Math","ππ","add","a","b","x","y","sub","Sender","reducer","state","action","type","messages","messagesTop","payload","messagesHeight","isShowingFireworks","isShowingSentiment","id","uuid","createdAt","Date","toISOString","message","find","m","index","indexOf","slice","top","height","initialState","module","exports","Messages","dispatch","messagesElRef","useRef","sentinelElRef","isNearBottom","messagesTopRef","current","messagesHeightRef","useEffect","el","minScroll","clientHeight","onScroll","scrollTop","scrollBottom","messagesBottom","addEventListener","passive","removeEventListener","isOwnMessage","length","sender","Self","setImmediate","scrollIntoView","behavior","className","style","ref","reduce","acc","content","undefined","push","key","Sentinel","getComputedStyle","getStyle","outerTop","marginTop","offsetTop","parseInt","outerHeight","marginBottom","px","Message","messageElRef","clsx","Other","title","gravity","sparks","createSpark","theta","radius","currPos","prevPos","hue","renderSparks","ctx","width","fillStyle","fillRect","forEach","spark","currVel","nextPos","updateSpark","beginPath","ellipse","fill","renderSpark","Fireworks","fireworksElRef","context","setContext","useState","parentElement","getBoundingClientRect","opacity","getContext","frameId","firstTime","time","onFrame","timeStamp","hw","hh","emitX","emitY","i","createSparks","removeSparks","setTimeout","Form","setMessage","onSubmit","event","preventDefault","Input","value","onChange","target","Button","disabled","hearts","createHearts","scale","createHeart","updateHearts","heart","h","updateHeart","Sentiment","sentimentElRef","visibleHearts","setVisibleHearts","clientWidth","removeHearts","map","role","aria-label","Heart","transform","App","useReducer","wrappedDispatch","useCallback","trim","Device","Header","Footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.fbcb0d20.chunk.js","sourcesContent":["import { Vec2 } from './types';\n\nexport * from './types';\n\nexport const {\n  devicePixelRatio: dpr,\n  requestAnimationFrame: raf,\n  cancelAnimationFrame: caf,\n} = window;\n\nexport const { atan2, cos, PI: π, random, sin } = Math;\nexport const ππ = π * 2;\n\nexport const add: (a: Vec2, b: Vec2) => Vec2 = (a, b) => ({\n  x: a.x + b.x,\n  y: a.y + b.y,\n});\n\nexport const sub: (a: Vec2, b: Vec2) => Vec2 = (a, b) => ({\n  x: a.x - b.x,\n  y: a.y - b.y,\n});\n","export enum Sender {\n  Self = 'Self',\n  Other = 'Other',\n}\n\nexport interface MessageData {\n  id: string;\n  createdAt: string;\n  sender: Sender;\n  content: string;\n  top?: number;\n  height?: number;\n}\n\nexport interface AppState {\n  messages: MessageData[];\n  messagesTop: number;\n  messagesHeight: number;\n  isShowingFireworks: boolean;\n  isShowingSentiment: boolean;\n}\n\nexport interface SetMessagesTopAction {\n  type: 'setMessagesTop';\n  payload: {\n    messagesTop: number;\n  };\n}\n\nexport interface SetMessagesHeightAction {\n  type: 'setMessagesHeight';\n  payload: {\n    messagesHeight: number;\n  };\n}\n\nexport interface AddMessageAction {\n  type: 'addMessage';\n  payload: {\n    sender: Sender;\n    content: string;\n  };\n}\n\nexport interface RenderMessageAction {\n  type: 'renderMessage';\n  payload: {\n    id: string;\n    top: number;\n    height: number;\n  };\n}\n\nexport interface SetIsShowingFireworksAction {\n  type: 'setIsShowingFireworks';\n  payload: {\n    isShowingFireworks: boolean;\n  };\n}\n\nexport interface SetIsShowingSentimentAction {\n  type: 'setIsShowingSentiment';\n  payload: {\n    isShowingSentiment: boolean;\n  };\n}\n\nexport type AppAction =\n  | SetMessagesTopAction\n  | SetMessagesHeightAction\n  | AddMessageAction\n  | RenderMessageAction\n  | SetIsShowingFireworksAction\n  | SetIsShowingSentimentAction;\n","import { Reducer } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { AppAction, AppState } from './types';\n\nexport * from './types';\n\nexport const reducer: Reducer<AppState, AppAction> = (state, action) => {\n  switch (action.type) {\n    case 'setMessagesTop':\n      return {\n        messages: state.messages,\n        messagesTop: action.payload.messagesTop,\n        messagesHeight: state.messagesHeight,\n        isShowingFireworks: state.isShowingFireworks,\n        isShowingSentiment: state.isShowingSentiment,\n      };\n    case 'setMessagesHeight':\n      return {\n        messages: state.messages,\n        messagesTop: state.messagesTop,\n        messagesHeight: action.payload.messagesHeight,\n        isShowingFireworks: state.isShowingFireworks,\n        isShowingSentiment: state.isShowingSentiment,\n      };\n    case 'addMessage':\n      return {\n        messages: [\n          ...state.messages,\n          {\n            id: uuid(),\n            createdAt: new Date().toISOString(),\n            ...action.payload,\n          },\n        ],\n        messagesTop: state.messagesTop,\n        messagesHeight: state.messagesHeight,\n        isShowingFireworks: state.isShowingFireworks,\n        isShowingSentiment: state.isShowingSentiment,\n      };\n    case 'renderMessage':\n      const message = state.messages.find((m) => m.id === action.payload.id);\n      const index = message ? state.messages.indexOf(message) : -1;\n\n      return message && index !== -1\n        ? {\n            messages: [\n              ...state.messages.slice(0, index),\n              {\n                ...message,\n                top: action.payload.top,\n                height: action.payload.height,\n              },\n              ...state.messages.slice(index + 1),\n            ],\n            messagesTop: state.messagesTop,\n            messagesHeight: state.messagesHeight + action.payload.height,\n            isShowingFireworks: state.isShowingFireworks,\n            isShowingSentiment: state.isShowingSentiment,\n          }\n        : state;\n    case 'setIsShowingFireworks':\n      return {\n        messages: state.messages,\n        messagesTop: state.messagesTop,\n        messagesHeight: state.messagesHeight,\n        isShowingFireworks: action.payload.isShowingFireworks,\n        isShowingSentiment: state.isShowingSentiment,\n      };\n    case 'setIsShowingSentiment':\n      return {\n        messages: state.messages,\n        messagesTop: state.messagesTop,\n        messagesHeight: state.messagesHeight,\n        isShowingFireworks: state.isShowingFireworks,\n        isShowingSentiment: action.payload.isShowingSentiment,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initialState: AppState = {\n  messages: [],\n  messagesTop: 0,\n  messagesHeight: 0,\n  isShowingFireworks: false,\n  isShowingSentiment: false,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__2boAo\",\"Input\":\"Form_Input__1kIqz\",\"Button\":\"Form_Button__1q5fL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__L9LXR\",\"Self\":\"Message_Self__13TvW\",\"Other\":\"Message_Other__oJUsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Device\":\"App_Device__1vnMx\",\"Header\":\"App_Header__2rl_K\",\"Footer\":\"App_Footer__3E1PI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__2D-Ym\",\"Sentinel\":\"Messages_Sentinel__286rc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sentiment\":\"Sentiment_Sentiment__ACt7i\",\"Heart\":\"Sentiment_Heart__z1evg\"};","import React, { Dispatch, FC, ReactNode, useEffect, useRef } from 'react';\n\nimport { AppAction, MessageData, Sender } from '../../app';\n\nimport { Message } from '../Message';\n\nimport style from './Messages.module.css';\n\ninterface Props {\n  messages: MessageData[];\n  messagesTop: number;\n  messagesHeight: number;\n  dispatch: Dispatch<AppAction>;\n}\n\nexport const Messages: FC<Props> = ({\n  messages,\n  messagesTop,\n  messagesHeight,\n  dispatch,\n}) => {\n  const messagesElRef = useRef<HTMLOListElement>(null);\n  const sentinelElRef = useRef<HTMLLIElement>(null);\n\n  const isNearBottom = useRef(true);\n\n  const messagesTopRef = useRef(messagesTop);\n  messagesTopRef.current = messagesTop;\n\n  const messagesHeightRef = useRef(messagesHeight);\n  messagesHeightRef.current = messagesHeight;\n\n  useEffect(() => {\n    if (!messagesElRef.current) {\n      return;\n    }\n\n    const el = messagesElRef.current;\n    const minScroll = el.clientHeight - 8;\n\n    dispatch({\n      type: 'setMessagesHeight',\n      payload: {\n        messagesHeight: el.clientHeight,\n      },\n    });\n\n    const onScroll = () => {\n      if (el.scrollTop < messagesTopRef.current && el.scrollTop < minScroll) {\n        el.scrollTop = minScroll;\n      }\n\n      dispatch({\n        type: 'setMessagesTop',\n        payload: {\n          messagesTop: el.scrollTop,\n        },\n      });\n\n      const scrollBottom = el.scrollTop + el.clientHeight;\n      const messagesBottom = messagesHeightRef.current - el.clientHeight / 3;\n      isNearBottom.current = scrollBottom > messagesBottom;\n    };\n\n    el.addEventListener('scroll', onScroll, { passive: true });\n    return () => {\n      el.removeEventListener('scroll', onScroll);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const isOwnMessage = messages[messages.length - 1]?.sender === Sender.Self;\n\n    if (isNearBottom.current || isOwnMessage) {\n      setImmediate(() => {\n        if (!sentinelElRef.current) {\n          return;\n        }\n\n        sentinelElRef.current.scrollIntoView({\n          behavior: 'smooth',\n        });\n      });\n    }\n  }, [messages]);\n\n  return (\n    <ol className={style.Messages} ref={messagesElRef}>\n      {messages.reduce<ReactNode[]>(\n        (acc, { id, createdAt, sender, content, top, height }) => {\n          if (!messagesElRef.current) {\n            return acc;\n          }\n\n          const { clientHeight } = messagesElRef.current;\n          const didMeasure = top !== undefined && height !== undefined;\n          const isInBounds =\n            top &&\n            height &&\n            top < messagesTop + clientHeight &&\n            top + height > messagesTop;\n\n          if (!didMeasure || isInBounds) {\n            acc.push(\n              <Message\n                key={id}\n                id={id}\n                createdAt={createdAt}\n                sender={sender}\n                content={content}\n                top={top}\n                height={height}\n                messagesHeight={messagesHeight}\n                dispatch={dispatch}\n              />,\n            );\n          }\n\n          return acc;\n        },\n        [],\n      )}\n      <li\n        className={style.Sentinel}\n        style={{ top: messagesHeight }}\n        ref={sentinelElRef}\n      ></li>\n    </ol>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Fireworks\":\"Fireworks_Fireworks__20lpI\"};","import clsx from 'clsx';\nimport React, { Dispatch, FC, useEffect, useRef } from 'react';\n\nimport { AppAction, MessageData, Sender } from '../../app';\n\nimport style from './Message.module.css';\n\ninterface Props extends MessageData {\n  messagesHeight: number;\n  dispatch: Dispatch<AppAction>;\n}\n\nconst { getComputedStyle: getStyle } = window;\n\nconst outerTop: (el: HTMLElement) => number = (el) => {\n  const { marginTop } = getStyle(el);\n  return el.offsetTop - parseInt(marginTop, 10);\n};\n\nconst outerHeight: (el: HTMLElement) => number = (el) => {\n  const { marginTop, height, marginBottom } = getStyle(el);\n  return [marginTop, height, marginBottom].reduce(\n    (acc, px) => acc + parseInt(px, 10),\n    0,\n  );\n};\n\nexport const Message: FC<Props> = ({\n  id,\n  createdAt,\n  sender,\n  content,\n  top,\n  height,\n  messagesHeight,\n  dispatch,\n}) => {\n  const messageElRef = useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    if (!messageElRef.current) {\n      return;\n    }\n\n    if (top === undefined && height === undefined) {\n      dispatch({\n        type: 'renderMessage',\n        payload: {\n          id,\n          top: messagesHeight + outerTop(messageElRef.current),\n          height: outerHeight(messageElRef.current),\n        },\n      });\n    }\n  }, [dispatch, height, id, messagesHeight, top]);\n\n  return (\n    <li\n      className={clsx({\n        [style.Message]: true,\n        [style.Self]: sender === Sender.Self,\n        [style.Other]: sender === Sender.Other,\n      })}\n      title={createdAt}\n      style={{\n        top,\n      }}\n      ref={messageElRef}\n    >\n      {content}\n    </li>\n  );\n};\n","import React, { Dispatch, FC, useEffect, useRef, useState } from 'react';\n\nimport { AppAction } from '../../app';\nimport {\n  add,\n  caf,\n  cos,\n  dpr,\n  Field,\n  Particle,\n  raf,\n  random,\n  sin,\n  sub,\n  Vec2,\n  π,\n  ππ,\n} from '../../lib';\n\nimport style from './Fireworks.module.css';\n\ninterface Props {\n  dispatch: Dispatch<AppAction>;\n}\n\ninterface Spark extends Particle {\n  hue: number;\n}\n\nconst maxInitialSpeed = 15;\nconst gravity: Vec2 = { x: 0, y: 0.2 };\n\nlet sparks: Spark[] = [];\n\nconst createSpark: (x: number, y: number) => Spark = (x, y) => {\n  const theta = random() * ππ;\n  const radius = random() * maxInitialSpeed;\n\n  return {\n    currPos: { x, y },\n    prevPos: {\n      x: x + cos(theta) * radius,\n      y: y + sin(theta) * radius,\n    },\n    hue: random() * ππ * (180 / π),\n  };\n};\n\nconst updateSpark: (spark: Spark) => void = (spark) => {\n  const currVel = add(sub(spark.currPos, spark.prevPos), gravity);\n  const nextPos = add(spark.currPos, currVel);\n\n  spark.prevPos = spark.currPos;\n  spark.currPos = nextPos;\n};\n\nconst renderSpark: (context: CanvasRenderingContext2D, spark: Spark) => void = (\n  ctx,\n  { currPos, prevPos, hue },\n) => {\n  ctx.beginPath();\n  ctx.fillStyle = `hsl(${hue}, 80%, 50%)`;\n  ctx.ellipse(currPos.x, currPos.y, 5, 5, 0, 0, ππ);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.fillStyle = `hsl(${(hue + 180) % 360}, 80%, 50%)`;\n  ctx.ellipse(prevPos.x, prevPos.y, 5, 5, 0, 0, ππ);\n  ctx.fill();\n};\n\nconst createSparks: (field: Field) => void = ({ width, height, time }) => {\n  const hw = width / 2;\n  const hh = height / 2;\n\n  if (time % 1_000 < 16 && time < 5_000) {\n    const emitX = hw / 2 + random() * hw;\n    const emitY = hh / 4 + random() * hh;\n\n    for (let i = 0; i < 100; ++i) {\n      sparks.push(createSpark(emitX, emitY));\n    }\n  }\n};\n\nconst renderSparks: (ctx: CanvasRenderingContext2D, field: Field) => void = (\n  ctx,\n  { width, height },\n) => {\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, width, height);\n\n  sparks.forEach((spark) => {\n    updateSpark(spark);\n    renderSpark(ctx, spark);\n  });\n};\n\nconst removeSparks: (field: Field) => void = ({ width, height }) => {\n  sparks = sparks.reduce<Spark[]>((acc, spark) => {\n    const {\n      currPos: { x, y },\n    } = spark;\n\n    if (0 < x && x < width && 0 < y && y < height) {\n      acc.push(spark);\n    }\n\n    return acc;\n  }, []);\n};\n\nexport const Fireworks: FC<Props> = ({ dispatch }) => {\n  const fireworksElRef = useRef<HTMLCanvasElement>(null);\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n\n  useEffect(() => {\n    if (!(fireworksElRef.current && fireworksElRef.current.parentElement)) {\n      return;\n    }\n\n    const {\n      width,\n      height,\n    } = fireworksElRef.current.parentElement.getBoundingClientRect();\n\n    fireworksElRef.current.width = width * dpr;\n    fireworksElRef.current.height = height * dpr;\n    fireworksElRef.current.style.opacity = '1';\n\n    setContext(fireworksElRef.current.getContext('2d'));\n  }, []);\n\n  useEffect(() => {\n    if (!(fireworksElRef.current && context)) {\n      return;\n    }\n\n    const { width, height } = fireworksElRef.current;\n\n    let frameId: number;\n    let firstTime = 0;\n    let time = 0;\n\n    const onFrame: FrameRequestCallback = (timeStamp: DOMHighResTimeStamp) => {\n      frameId = raf(onFrame);\n\n      firstTime || (firstTime = timeStamp);\n      time = timeStamp - firstTime;\n\n      createSparks({ width, height, time });\n      renderSparks(context, { width, height, time });\n      removeSparks({ width, height, time });\n\n      if (time > 5_000 && sparks.length === 0 && fireworksElRef.current) {\n        fireworksElRef.current.style.opacity = '0';\n        caf(frameId);\n\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'setIsShowingFireworks',\n              payload: {\n                isShowingFireworks: false,\n              },\n            }),\n          400,\n        );\n      }\n    };\n\n    frameId = raf(onFrame);\n    return () => {\n      caf(frameId);\n    };\n  }, [context, dispatch]);\n\n  return <canvas className={style.Fireworks} ref={fireworksElRef}></canvas>;\n};\n","import React, { Dispatch, FC, useState } from 'react';\n\nimport { AppAction, Sender } from '../../app';\n\nimport style from './Form.module.css';\n\ninterface Props {\n  dispatch: Dispatch<AppAction>;\n}\n\nexport const Form: FC<Props> = ({ dispatch }) => {\n  const [message, setMessage] = useState('');\n\n  return (\n    <form\n      action=\"\"\n      className={style.Form}\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        dispatch({\n          type: 'addMessage',\n          payload: {\n            sender: Sender.Self,\n            content: message,\n          },\n        });\n\n        setMessage('');\n      }}\n    >\n      <input\n        type=\"text\"\n        className={style.Input}\n        value={message}\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button type=\"submit\" className={style.Button} disabled={message === ''}>\n        ↑\n      </button>\n    </form>\n  );\n};\n","import React, { FC, useRef, useEffect, Dispatch, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { AppAction } from '../../app';\nimport {\n  add,\n  sub,\n  raf,\n  caf,\n  Field,\n  Particle,\n  Vec2,\n  random,\n  ππ,\n  cos,\n  sin,\n} from '../../lib';\n\nimport style from './Sentiment.module.css';\n\ninterface Props {\n  dispatch: Dispatch<AppAction>;\n}\n\ninterface Heart extends Particle {\n  id: string;\n  opacity: number;\n  scale: number;\n}\n\nconst maxInitialSpeed = 5;\nconst gravity: Vec2 = { x: 0, y: -0.1 };\n\nlet hearts: Heart[] = [];\n\nconst createHeart: (x: number, y: number) => Heart = (x, y) => {\n  const theta = random() * ππ;\n  const radius = random() * maxInitialSpeed;\n\n  const px = x + cos(theta) * radius;\n  const py = y + sin(theta) * radius;\n\n  return {\n    currPos: { x, y },\n    prevPos: {\n      x: px,\n      y: py,\n    },\n    id: uuid(),\n    opacity: 1,\n    scale: 1,\n  };\n};\n\nconst updateHeart: (heart: Heart) => void = (h) => {\n  const currVel = add(sub(h.currPos, h.prevPos), gravity);\n  const nextPos = add(h.currPos, currVel);\n\n  h.prevPos = h.currPos;\n  h.currPos = nextPos;\n};\n\nconst createHearts: (field: Field) => void = ({ width, height, time }) => {\n  if (time % 80 < 16 && time < 5_000) {\n    const emitX = random() * width;\n    const emitY = height;\n\n    hearts.push(createHeart(emitX, emitY));\n  }\n};\n\nconst updateHearts: (field: Field) => void = ({ height }) => {\n  hearts.forEach((heart) => {\n    updateHeart(heart);\n    heart.opacity = heart.currPos.y / height;\n    heart.scale = 2 - heart.currPos.y / height;\n  });\n};\n\nconst removeHearts: (field: Field) => void = ({ width, height, time }) => {\n  hearts = hearts.reduce<Heart[]>((acc, heart) => {\n    const {\n      currPos: { x, y },\n    } = heart;\n\n    if (0 < x && x < width && -40 < y && y < height + 40) {\n      acc.push(heart);\n    }\n\n    return acc;\n  }, []);\n};\n\nexport const Sentiment: FC<Props> = ({ dispatch }) => {\n  const sentimentElRef = useRef<HTMLDivElement>(null);\n  const [visibleHearts, setVisibleHearts] = useState<Heart[]>([]);\n\n  useEffect(() => {\n    if (!sentimentElRef.current) {\n      return;\n    }\n\n    sentimentElRef.current.style.opacity = '1';\n    const { clientWidth: width, clientHeight: height } = sentimentElRef.current;\n\n    let frameId: number;\n    let firstTime = 0;\n    let time = 0;\n\n    const onFrame: FrameRequestCallback = (timeStamp: DOMHighResTimeStamp) => {\n      frameId = raf(onFrame);\n\n      firstTime || (firstTime = timeStamp);\n      time = timeStamp - firstTime;\n\n      updateHearts({ width, height, time });\n      createHearts({ width, height, time });\n      removeHearts({ width, height, time });\n      setVisibleHearts(hearts);\n\n      if (time > 5_000 && hearts.length === 0 && sentimentElRef.current) {\n        sentimentElRef.current.style.opacity = '0';\n        caf(frameId);\n\n        setTimeout(\n          () =>\n            dispatch({\n              type: 'setIsShowingSentiment',\n              payload: {\n                isShowingSentiment: false,\n              },\n            }),\n          400,\n        );\n      }\n    };\n\n    frameId = raf(onFrame);\n    return () => {\n      caf(frameId);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className={style.Sentiment} ref={sentimentElRef}>\n      {visibleHearts.map(({ id, currPos: { x, y }, opacity, scale }) => (\n        <span\n          role=\"img\"\n          aria-label=\"love\"\n          className={style.Heart}\n          key={id}\n          style={{\n            opacity,\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n          }}\n        >\n          ❤️\n        </span>\n      ))}\n    </div>\n  );\n};\n","import React, { FC, useCallback, useReducer } from 'react';\n\nimport { AppAction, initialState, reducer, Sender } from '../../app';\n\nimport { Fireworks } from '../Fireworks';\nimport { Form } from '../Form';\nimport { Messages } from '../Messages';\n\nimport style from './App.module.css';\nimport { Sentiment } from '../Sentiment';\n\nexport const App: FC = () => {\n  const [\n    {\n      messages,\n      messagesTop,\n      messagesHeight,\n      isShowingFireworks,\n      isShowingSentiment,\n    },\n    dispatch,\n  ] = useReducer(reducer, initialState);\n\n  const wrappedDispatch = useCallback(\n    (action: AppAction) => {\n      dispatch(action);\n\n      if (action.type !== 'addMessage') {\n        return;\n      }\n\n      if (action.payload.content.indexOf('say ') === 0) {\n        setTimeout(() => {\n          wrappedDispatch({\n            type: 'addMessage',\n            payload: {\n              sender: Sender.Other,\n              content: action.payload.content.slice(3).trim(),\n            },\n          });\n        }, 2_000);\n      }\n\n      if (action.payload.content === 'congrats') {\n        dispatch({\n          type: 'setIsShowingFireworks',\n          payload: {\n            isShowingFireworks: true,\n          },\n        });\n      }\n\n      if (action.payload.content === '❤️') {\n        dispatch({\n          type: 'setIsShowingSentiment',\n          payload: {\n            isShowingSentiment: true,\n          },\n        });\n      }\n    },\n    [dispatch],\n  );\n\n  return (\n    <article className={style.Device}>\n      {isShowingFireworks && <Fireworks dispatch={dispatch} />}\n      <header className={style.Header}>Bot</header>\n      <Messages\n        messages={messages}\n        messagesTop={messagesTop}\n        messagesHeight={messagesHeight}\n        dispatch={dispatch}\n      />\n      <footer className={style.Footer}>\n        <Form dispatch={wrappedDispatch} />\n      </footer>\n      {isShowingSentiment && <Sentiment dispatch={dispatch} />}\n    </article>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}